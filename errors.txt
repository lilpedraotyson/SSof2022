Body(
If(Condition: Expression(Variable(c), [Constant(0)]), ThenBlock: Body(
Assignment(Variable(a), Function(b, []))
If(Condition: Expression(Variable(c), [Constant(3)]), ThenBlock: Body(
Assignment(Variable(a), Function(f, [Variable(a)]))), ElseBlock: Body(
Assignment(Variable(c), Function(d, [Variable(a)]))))), ElseBlock: Body())
Function(e, [Variable(a), Variable(c)]))
-----EVALUATE----
CONSIDERING PATTERN  {'vulnerability': 'A', 'sources': ['f'], 'sanitizers': ['t'], 'sinks': ['e'], 'implicit': 'no'}
Running: If(Condition: Expression(Variable(c), [Constant(0)]), ThenBlock: Body(
Assignment(Variable(a), Function(b, []))
If(Condition: Expression(Variable(c), [Constant(3)]), ThenBlock: Body(
Assignment(Variable(a), Function(f, [Variable(a)]))), ElseBlock: Body(
Assignment(Variable(c), Function(d, [Variable(a)]))))), ElseBlock: Body())
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(a)
expression:  None
FINDING ERROR sink: e expression: Variable(c)
expression:  None
Running: Assignment(Variable(a), Function(b, []))
Variable: a -> value: Function(b, [])
Running: If(Condition: Expression(Variable(c), [Constant(3)]), ThenBlock: Body(
Assignment(Variable(a), Function(f, [Variable(a)]))), ElseBlock: Body(
Assignment(Variable(c), Function(d, [Variable(a)]))))
Running: Assignment(Variable(c), Function(d, [Variable(a)]))
Variable: c -> value: Function(d, [Function(b, [])])
Running: Function(e, [Variable(a), Variable(c)])
Running: Assignment(Variable(a), Function(f, [Variable(a)]))
Variable: a -> value: Function(f, [Function(b, [])])
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(a)
expression:  Function(f, [Function(b, [])])
expression:  Function(b, [])
FINDING ERROR sink: e expression: Variable(c)
expression:  None
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(c)
expression:  None
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(a)
expression:  None
FINDING ERROR sink: e expression: Variable(c)
expression:  None
CONSIDERING PATTERN  {'vulnerability': 'B', 'sources': ['d'], 'sanitizers': [], 'sinks': ['c', 'e'], 'implicit': 'no'}
Running: If(Condition: Expression(Variable(c), [Constant(0)]), ThenBlock: Body(
Assignment(Variable(a), Function(b, []))
If(Condition: Expression(Variable(c), [Constant(3)]), ThenBlock: Body(
Assignment(Variable(a), Function(f, [Variable(a)]))), ElseBlock: Body(
Assignment(Variable(c), Function(d, [Variable(a)]))))), ElseBlock: Body())
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(a)
expression:  None
FINDING ERROR sink: e expression: Variable(c)
expression:  None
Running: Assignment(Variable(a), Function(b, []))
Variable: a -> value: Function(b, [])
Running: If(Condition: Expression(Variable(c), [Constant(3)]), ThenBlock: Body(
Assignment(Variable(a), Function(f, [Variable(a)]))), ElseBlock: Body(
Assignment(Variable(c), Function(d, [Variable(a)]))))
Running: Assignment(Variable(c), Function(d, [Variable(a)]))
Variable: c -> value: Function(d, [Function(b, [])])
FINDING ERROR sink: c expression: Function(d, [Variable(a)])
expression:  Function(d, [Variable(a)])
expression:  Variable(a)
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(c)
expression:  Function(d, [Function(b, [])])
expression:  Function(b, [])
Running: Assignment(Variable(a), Function(f, [Variable(a)]))
Variable: a -> value: Function(f, [Function(b, [])])
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(c)
expression:  None
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(c)
expression:  None
Running: Function(e, [Variable(a), Variable(c)])
FINDING ERROR sink: e expression: Variable(a)
expression:  None
FINDING ERROR sink: e expression: Variable(c)
expression:  None
[{'vulnerability': 'A_1', 'source': 'f', 'sink': 'e', 'unsanitized flows': 'yes', 'sanitized flows': []}, {'vulnerability': 'B_1', 'source': 'd', 'sink': 'c', 'unsanitized flows': 'yes', 'sanitized flows': []}, {'vulnerability': 'B_2', 'source': 'd', 'sink': 'e', 'unsanitized flows': 'yes', 'sanitized flows': []}]
